// Contract for setting up a Mun network.
//   Author: nightingale

CONTRACT_TYPE:NEEDS[RemoteTech]
{
    name = RT_MoonRelay

    title = RemoteTech: Create a network for @targetBody.
    description = @isMinmus ? @descMinmus : @descDefault
    synopsis = Build a communication network that provides coverage of @targetBody with a link back to mission control.
    completedMessage = The network is up and transmitting, and our shake-out testing is complete!

    group = RemoteTech

    // Level 2 prestige
    prestige = Significant

    targetBody = @targetMoon

    // Always offered by CommSat Group
    agent = Communication Satellite Group

    // Contract rewards
    rewardReputation = 2.0
    rewardFunds = @advanceFunds * 3.0
    advanceFunds = 40000.0

    weight = 2.0

    DATA
    {
        type = bool

        isMinmus = @targetBody.Name() == "Minmus"
    }

    DATA
    {
        type = CelestialBody
        uniqueValue = true

        targetMoon = HomeWorld().Children().Where(cb => cb.RemoteTechCoverage() < 0.7).Random()
    }

    DATA
    {
        type = string

        descDefault = Mission control has decided they'd like to find out what's on the far side of @targetBody.  In order to do that, we need to set up a relay network.
        descMinmus = They say that Minmus is too small to bother with setting up a dedicated communications network.  Let's prove them wrong!
    }
    
    PARAMETER
    {
        name = MoonCoverage
        type = CelestialBodyCoverage

        coverage = 0.95
    }

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 3d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }

    REQUIREMENT
    {
        name = CelestialBodyCoverage
        type = CelestialBodyCoverage

        targetBody = HomeWorld()

        minCoverage = 0.7
        maxCoverage = 1.0
    }

    REQUIREMENT
    {
        name = ActiveVesselRange
        type = ActiveVesselRange

        targetBody = HomeWorld()
        range = @/targetBody.SemiMajorAxis()
    }

    REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
        partModuleType = Power
    }
}
