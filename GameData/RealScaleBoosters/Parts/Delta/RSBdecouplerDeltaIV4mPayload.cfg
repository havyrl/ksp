PART
{
	// --- general parameters ---
	name = RSBdecouplerDeltaIV4mPayload
	module = Part
	author = NecroBones
	RSBclass = delta4

	// --- asset parameters ---
	MODEL
	{
		model = RealScaleBoosters/Parts/Delta/RSBdecouplerDeltaIV4mPayload
		scale = 1.0, 1.0, 1.0
	}
	scale = 1.0
	rescaleFactor = 1.0

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_bottom = 0.0, -0.5, 0.0, 0.0, -1.0, 0.0, 3
	node_stack_top = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0, 2

	// --- FX definitions ---

	fx_gasBurst_white = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0, decouple
	sound_decoupler_fire = decouple

	// --- editor parameters ---
	TechRequired = metaMaterials
	entryCost = 10500
	cost = 7500
	category = Structural
	subcategory = 0
	title = Delta IV Payload Decoupler (4m)
	manufacturer = Real Scale Boosters
	description = Payload adapter and decoupler for the Delta III/IV 4m DCSS.

	tags = delta payload ?rsb break decouple explo separat split

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.30
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 2500
	bulkheadProfiles = size3

	fuelCrossFeed = False

	breakingForce = 15000
	breakingTorque = 15000

	stageOffset = 1
	childStageOffset = 1

	buoyancy = 0.5
	buoyancyUseSine = False

	ActivatesEvenIfDisconnected = true
	stagingIcon = DECOUPLER_VERT


	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 500
		explosiveNodeID = top
		//isOmniDecoupler = true
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
