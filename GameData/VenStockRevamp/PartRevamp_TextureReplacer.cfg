//pods

//@PART[Mark1-2Pod]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {}
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Shine
//      }
//}
//@PART[mk2LanderCabin]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {}
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Shine
//      }
//}
//@PART[mk1pod]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {}
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Shine
//      }
//}
//@PART[crewCabin]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {}
//	%MODULE[TRReflection]
//      {
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Reflect2 Reflect1
//		}
//}
//@PART[Large_Crewed_Lab]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {}
//	%MODULE[TRReflection]
//      {
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[landerCabinSmall]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Shine
//      }
//}
//@PART[cupola]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//      {
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = CoupShine
//      }
//}
@PART[HECS2_ProbeCore]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
		meshes = Cylinder_000
      }
}


//fuel tanks

@PART[radialRCSTank]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[rcsTankRadialLong]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}

@PART[RadialLF]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[RadialLFLong]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[RadialLFO]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[RadialLFOLong]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[RadialMonoMini]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[xenonTankRadial]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[xenonTank]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[xenonTankLarge]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}
@PART[toroidalFuelTank]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
        meshes = Tank
      }
}

//solar panels

@PART[solarPanels1]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour =  0.3 0.3 0.3
		interval = 2
		meshes = Cube_003 Cube_002 Cube_004
      }
}
@PART[solarPanels2]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Panel1_001 Panel1_002 Panel1_003 Panel1_004 Panel1_005
      }
}
@PART[solarPanels3]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Panel1_002 Panel1_001 Panel1_000
      }
}
@PART[solarPanels4]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Panel1_002 Panel1_001 Panel1_004 Panel1_003 PanelReflect4_001
      }
}
@PART[solarPanels5]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
      }
}
@PART[1x3WPanels]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Panel1_002 Panel1_001 Panel1_004
      }
}
@PART[1x3SPanels]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {}
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Panel1_002 Panel1_001 Panel1_004
      }
}
@PART[largeSolarPanel]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Radiators SolarCells
      }
}
@PART[LgRadialSolarPanel]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Shine
      }
}

//lights

//@PART[spotLight1]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Glass
//		}
//}
//@PART[spotLight2]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Glass
//		}
//}
//@PART[SmallSpotLight]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.3 0.3 0.3
//		interval = 2
//		meshes = Glass
//		}
//}

//Science

@PART[sensorThermometer]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
        meshes = glass
      }
}
@PART[InfraredTelescope]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
		meshes = Cylinder_001
      }
}

//Engines

@PART[liquidEngine3]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.3 0.3 0.3
		interval = 2
        meshes = Torus_001
      }
}
@PART[LargeOMS]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
		meshes = Nozzle
      }
}

//Utility

@PART[commDish]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.1 0.1 0.1
		interval = 2
		meshes = Dish_mesh
      }
}
@PART[ISRU]:NEEDS[TextureReplacer]:FINAL {
	!MODULE[TRReflection],* {} 
	%MODULE[TRReflection]
      {
        colour = 0.2 0.2 0.2
		interval = 2
		meshes = Pipes
      }
}
//@PART[landingLeg1-2]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = piston clamp-1 clamp-2
//		}
//}
//@PART[landingLeg1]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Piston
//		}
//}
//@PART[miniLandingLeg]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = piston leg_obj
//		}
//}
//@PART[dockingPort2]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[dockingPort3]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[dockingPort1]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[dockingPortLarge]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[dockingPortLateral]:NEEDS[TextureReplacer]:FINAL {
//	!MODULE[TRReflection],* {} 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//@PART[ParaDockingPort]:NEEDS[TextureReplacer]:FINAL { 
//	%MODULE[TRReflection]
//		{
//		colour = 0.2 0.2 0.2
//		interval = 2
//		meshes = Shine
//		}
//}
//internals

