PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = MEMLander
module = Part
author = Lack NASA

// --- asset parameters ---
MODEL
{
	model = SXT/Parts/Rocketry/Command/MEM/model
	texture = model000 , SXT/OldAssets/Command/Mark1Cockpit/Mk1C
	texture = model001_NRM , SXT/OldAssets/Command/Mark1Cockpit/Mk1C_NRM
	texture = model002 , Squad/Parts/Command/probeRoverBody/model000
	texture = model003 , Squad/Parts/Command/hitchhikerStorageContainer/cabin
	texture = model004_NRM , Squad/Parts/Command/hitchhikerStorageContainer/cabin_n
	texture = model005 , Squad/Parts/Utility/rcsBlockRV-105/model000	
}

MODEL
{
	model = SXT/Parts/Rocketry/Command/MEM/ascentEngine
	texture = nozzle , Squad/Parts/Engine/liquidEngine48-7S/ksp_m_liquidEngine_diff
}

scale = 1
rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_bottom = 0.0, -0.65, 0.0, 0, -1, 0, 1
node_stack_top = 0.0, 0.954, 0.0, 0.0, 1.0, 0.0, 2

fx_exhaustFlame_white_tiny = 0.0, 0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustFlame_yellow_tiny = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, running
sound_vent_medium = engage
sound_rocket_mini = running
sound_vent_soft = disengage

// --- editor parameters ---
TechRequired = commandModules
entryCost = 8200
cost = 5000
category = Pods
subcategory = 0
title = Munar Excursion Module Ascent Stage
manufacturer = Kerlington Model Rockets and Paper Products Inc
description = The Ascent stage houses the crew cabin with instrument panels and flight controls. It contains it's own Ascent Propulsion System (APS) engine and propellant tanks for return to munar orbit and rendezvous with the Command/Service Module. It also contains a Reaction Control System (RCS) for attitude and translation control. A forward EVA hatch provides access to and from the munar surface, while an overhead docking port provides access to and from the Command Module. 
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 2.1
dragModelType = default
maximum_drag = 0.20
minimum_drag = 0.15
angularDrag = 2
crashTolerance = 6
maxTemp = 1000
skinMaxTemp = 2000
bulkheadProfiles = size2
	
vesselType = Lander

// --- internal setup ---
CrewCapacity = 2

INTERNAL
{
  name = MEMInternals
}
MODULE
{
	name = ModuleCommand
	minimumCrew = 1
}
RESOURCE
{
	name = ElectricCharge
	amount = 40
	maxAmount = 40	
}
MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 2
	YawTorque = 2
	RollTorque = 2
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.03
	}
}
MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}
MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Stored Data
	storeActionName = Store Experiments
	evaOnlyStorage = True
	storageRange = 2.0
}
RESOURCE
{
 name = LiquidFuel
 amount = 60
 maxAmount = 60
}
RESOURCE
{
 name = Oxidizer
 amount = 73.32
 maxAmount = 73.32
}
RESOURCE
{
	name = MonoPropellant
	amount = 25
	maxAmount = 25
}
MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 12
	heatProduction = 150
	fxOffset = 0, 0, 0.125
	EngineType = LiquidFuel
	PROPELLANT
	{
	 	name = LiquidFuel
		ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
	atmosphereCurve
 	{
		key = 0 311
		key = 1 60
 	}
}
MODULE
{
	name = ModuleRCS
	thrusterTransformName = RCSthruster
	thrusterPower = 0.44
	resourceName = MonoPropellant
	atmosphereCurve
 	{
   	 key = 0 290
  	 key = 1 100
 	}
}


}
